from datetime import datetime
from pprint import pprint

from query import Query
from filter import Filter
from attributes import ProcessingLevel

if __name__ == '__main__':
    start_date = datetime(2023, 7, 2)
    end_date = datetime(2023, 7, 2)

    wkt = f'POINT(69.0 61.0)'
    # wkt = "POLYGON((59.15164136900006042 63.96382116200004475, 59.66804499999999933 65.04728599999999972, " \
    #       "60.82411499999999904 65.20596899999999607, 62.00999300000000147 65.84654000000000451, " \
    #       "63.01090399999999647 65.3725689999999986, 63.13287400200005095 64.58282462400006807, " \
    #       "64.18493404100007638 64.46390339700008099, 65.37210033100006967 64.73323691200005214, " \
    #       "66.44276268300006905 64.73327307000005248, 67.54175853700007792 64.68124886600003265, " \
    #       "68.58452482200004852 64.60979984300007573, 69.52859597200006192 64.62693403400004399, " \
    #       "70.62472058900004868 64.49353866400002744, 71.6299164920000635 63.85167825600007063, " \
    #       "72.48999601700006679 63.65213626900003874, 73.66164799000006269 63.52114767900008019, " \
    #       "74.5919966150000846 63.32009954000005791, 75.86046218400008456 63.29244695100004492, " \
    #       "76.65838924000007637 63.25156064900005504, 77.55751400500003001 63.24205343800002765, " \
    #       "78.42504201300005207 62.81933123800007479, 79.5283741740000778 62.81064037100003361, " \
    #       "80.59062002100006339 63.38901195400006827, 81.63374469600006478 63.18600669500006006, " \
    #       "82.65886558400006834 62.90509201100007886, 83.57125715200004379 62.74078608500008158, " \
    #       "84.56027502800003504 62.50389362900006063, 85.60773344800003315 61.85139271200006306, " \
    #       "86.28594384600006606 61.50772398600003044, 85.37187113300007013 60.81092643500005579, " \
    #       "84.54486975700007179 60.61306118700002799, 83.3699027640000736 60.5063228650000724, " \
    #       "82.44372321600008036 60.42078797500005294, 81.32301692600003662 60.40390259100007597, " \
    #       "80.48027448500005221 60.43798777200004224, 79.39544457600004534 60.42960681400006706, " \
    #       "78.41837732300007247 60.58714378600006967, 77.63066015200007541 60.2363176270000622, " \
    #       "76.55831331300004194 59.25203909000003932, 75.53403314600006979 58.46864161000007698, " \
    #       "74.54102387300002874 58.43168793000006644, 73.53592105300003823 58.48523749100007763, " \
    #       "72.41760908200006952 58.77111283900006811, 72.24092196900005547 59.18030354800004034, " \
    #       "71.55519435500008285 59.4606151700000396, 70.29996840400008296 59.5906745220000289, " \
    #       "69.3918682030000582 59.52683240600003955, 68.52256194500006359 59.12171208500006969, " \
    #       "67.48775668500007896 58.46644400500002803, 66.66804414500006715 58.29785984400007237, " \
    #       "65.38706036300004598 58.37975647100006427, 64.40124088700002858 58.76160875800007943, " \
    #       "63.31809377100006486 59.59071729500004722, 62.32526410800005578 60.47290506600006665, " \
    #       "61.49486193900003173 61.21297247200004676, 60.33727188000005981 61.44647935900007951, " \
    #       "59.57755422900004305 61.5529415760000802, 59.28677928200005454 61.80223183600003267, " \
    #       "59.2181222880000746 62.08971124100003181, 59.16798040400004766 62.68228843600007849, " \
    #       "59.15164136900006042 63.96382116200004475))"

    # setting up a filter
    f = Filter()  # create Filter instance
    f.by_sensing_date(start_date, end_date, full_day=True)  # filter by sensing dates
    f.And()  # add `and` to the end of the filter
    f.by_geographic_criteria(wkt)  # filter by coordinates
    f.And()
    f.collection('SENTINEL-2')  # filter by collection name
    f.And()

    attributes = [ProcessingLevel() == 'S2MSI1C']  # setting up attributes filter
    f.by_attribute(attributes)  # apply method `filter by attributes`

    query = Query()  # create Query instance
    query.set_filter(f)  # apply filter
    query.set_orderby('ContentDate/Start', ascending=True)  # sort results by sensing date in ascending order
    query.set_expand(attributes=True, assets=True)
    response = query.send()  # send query

    pprint(response)
